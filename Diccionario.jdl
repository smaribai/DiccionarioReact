
entity Pais {
	@Id codigoPais String required maxlength(2)
    nombrePais String required maxlength(100)
}

entity Divisa {
	@Id codigoDivisa String required maxlength(3)
    nombreDivisa String required maxlength(100)
}

entity Idioma {
  @Id codigo String required maxlength(2)
  nombre String required maxlength(100)
}

entity TipoCliente {
  @Id codigo String required maxlength(3) 
  nombre String required maxlength(100)
}

entity Cliente {
  @Id idCliente String required maxlength(20)
  nombre String required maxlength(70)
  descripcion String maxlength(200)
  direccion String maxlength(200)  
}

entity Envio {
    cliente String
    remitente String
    destinatario String
    proveedor String
    refRemitente String
    refDestinatario String
    codigoArancelarioOrigen String
    descripcion String
    importe Double
    provinciaDestino String
    uds Integer
    peso Double
}

relationship OneToOne {
  Envio{paisOrigen} to Pais
  Envio{paisDestino} to Pais  
  Envio{divisa} to Divisa
  Envio{idioma} to Idioma  
  Envio{refCliente} to Cliente
  Cliente{tipoCliente} to TipoCliente
  Cliente{pais} to Pais
}

entity Control {
  //@Id idControl String
  //idControl String
  nombre String
  descripcion String
  //search nombre, descripcion

}
entity Producto {
  //@Id codigoArancelario String
  codigoArancelario String
  descripcion String  
}

entity ProductoControles {
  descripcion String  
}

relationship OneToOne {
  ProductoControles{codigoArancelario} to Producto
  ProductoControles{idControl} to Control 
}
// Set pagination options
paginate Producto,ProductoControles, Envio with infinite-scroll
paginate Control, Pais, Divisa, Idioma, Cliente, TipoCliente  with pagination
// Use Data Transfer Objects (DTO)
dto * with mapstruct
// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
// angularSuffix * with mySuffix
